#version 330 
layout (triangles) in;
layout (triangle_strip, max_vertices = 18) out;

uniform mat4 shadowMatrices[6];
uniform vec3 lightPosition;
uniform float far_plane;

//out float FragDepth;
out vec4 FragPos;
/*
void EmitVertex_(vec4 position, int layer)
{
    gl_Position = position;
    FragDepth = length(position.xyz - lightPosition) / far_plane;
    gl_Layer = layer;
    EmitVertex();
}
*/
void main()
{
    for(int face = 0; face < 6; ++face)
    {
        gl_Layer = face; // built-in variable that specifies to which face we render.
        for(int i = 0; i < 3; ++i) // for each triangle's vertices
        {
            FragPos = gl_in[i].gl_Position;
            gl_Position = shadowMatrices[face] * FragPos;
            EmitVertex();
        }    
        EndPrimitive();
    }
    
}