#version 330 core
layout (triangles) in;
layout (triangle_strip, max_vertices = 18) out;

uniform mat4 shadowMatrices[6];
uniform vec3 lightPosition;
uniform float far_plane;

out float FragDepth;

void EmitVertex_(vec4 position, int layer)
{
    gl_Position = position;
    FragDepth = length(position.xyz - lightPosition) / far_plane;
    gl_Layer = layer;
    EmitVertex();
}

void main()
{
    for (int face = 0; face < 6; ++face)
    {
        for (int i = 0; i < 3; ++i)
        {
            vec4 worldPos = gl_in[i].gl_Position;
            EmitVertex_(shadowMatrices[face] * worldPos, face);
        }
        EndPrimitive();
    }
    
}